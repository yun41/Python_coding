module counter(Clock,Reset,Y);

input lock,Reset;
output Y;
reg Div2,Div4,Div8,Div16,Y;

always@(posedge Clock or negedge Reset)
    if(!Reset)
        Div2=0;
    else
        Div2=!Div2;

always@(posedge Div2 or negedge Reset)
    if(!Reset)
        Div4=0;
    else
        Div4=!Div4;

always@(posedge Div4 or negedge Reset)
    if(!Reset)
        Div8=0;
    else
        Div8=!Div8;

always@(posedge Div8 or negedge Reset)
    if(!Reset)
        Div16=0;
    else
        Div16=!Div16;

always@(posedge Clock or negedge Reset)
    if(!Reset)
        Y=0;
    else
        Y=Div16;
endmodule


`timescale 1ns/1ns

module tb_counter;

reg Clock, Reset;
wire Y;
reg Div2,Div4,Div8,Div16;

counter counter_1 (Clock,Reset,Y);

always #10 Clock=~Clock;

initial begin
Reset=0; Clock=0;
#5 Reset=1;
#220 Reset=0;
end
endmodule